knitr::opts_chunk$set(echo = TRUE)
library(spatstat)
# Cargamos los datos
database <- read.csv("database.csv")
# Cargamos los datos
database <- read.csv("database.csv")
View(database)
# Cargamos los datos
database <- read.csv("database.csv")
# Especificamos la region
# database <- database[database$Region == "MÃÂ©xico and Central America", ]
# Definimos la ventana
wndw <- owin(x = c(min(database$Longitude), max(database$Longitude)),
y = c(min(database$Latitude), max(database$Latitude)))
# Hacemos el objeto ppp
spec <- ppp(x = database$Longitude, database$Latitude, window = wndw)
plot(spec)
plot(density(spec))
rip.k <- Kest(spec)
plot(rip.k)
rip.k <- Kest(spec,nlarge = Inf)
plot(rip.k)
rip.k <- Kest(spec)
plot(rip.k)
rip.l <- Lest(spec)
plot(rip.l)
# SimulaciÃ³n de Poissones
set.seed(1) # Establecemos una semilla para reproducibilidad
env <- envelope(spec, fun = Lest, nsim = 999)
plot(env)
# Cantidad de puntos cercanos segÃºn aumenta el radio
l.iso <- rip.l$iso
l.theo <- rip.l$theo
l.dev <- l.iso - l.theo
plot(l.dev ~ rip.l$r, type = "l",
ylab = "Desviacion distribución teorica",
xlab = "Distancia")
knitr::opts_chunk$set(echo = FALSE,warning = FALSE,error = FALSE)
library(spatstat)
database <- read.csv("database.csv")
View(database)
View(database)
plot(spec,main = "Patrones Espaciales")
# Cargamos los datos
database <- read.csv("database.csv")
# Especificamos la region
# database <- database[database$Region == "MÃÂ©xico and Central America", ]
# Definimos la ventana
wndw <- owin(x = c(min(database$Longitude), max(database$Longitude)),
y = c(min(database$Latitude), max(database$Latitude)))
# Hacemos el objeto ppp
spec <- ppp(x = database$Longitude, database$Latitude, window = wndw)
plot(spec,main = "Patrones Espaciales")
plot(spec,main = "Patrones espaciales")
plot(density(spec),main="Gráfico de densidad")
rip.k <- Kest(spec)
plot(rip.k,main = "Función k")
rip.l <- Lest(spec)
plot(rip.l,main = "Función L")
# Simulacion de Poissones
set.seed(1) # Establecemos una semilla para reproducibilidad
env <- envelope(spec, fun = Lest, nsim = 999)
plot(env,main = "Monte Carlo envelopes con función L")
# Simulacion de Poissones
set.seed(2) # Establecemos una semilla para reproducibilidad
env <- envelope(spec, fun = Gest, nsim = 999)
plot(env,main = "Monte Carlo envelopes con función L")
# Cantidad de puntos cercanos segun aumenta el radio
l.iso <- rip.l$iso
l.theo <- rip.l$theo
l.dev <- l.iso - l.theo
plot(l.dev ~ rip.l$r, type = "l",
ylab = "Desviacion distribución teorica",
xlab = "Distancia")
grid()
# Simulacion de Poissones
set.seed(1) # Establecemos una semilla para reproducibilidad
env <- envelope(spec, fun = Lest, nsim = 999)
plot(env,main = "Monte Carlo envelopes con función L")
grid()
rip.k <- Kest(spec)
plot(rip.k,main = "Función k")
grid()
rip.l <- Lest(spec)
plot(rip.l,main = "Función L")
grid()
# Cantidad de puntos cercanos segun aumenta el radio
l.iso <- rip.l$iso
l.theo <- rip.l$theo
l.dev <- l.iso - l.theo
plot(l.dev ~ rip.l$r, type = "l",
ylab = "Desviacion distribución teorica",
xlab = "Distancia",
main="Cercaníad de puntos según distancia")
grid()
# Cantidad de puntos cercanos segun aumenta el radio
l.iso <- rip.l$iso
l.theo <- rip.l$theo
l.dev <- l.iso - l.theo
plot(l.dev ~ rip.l$r, type = "l",
ylab = "Desviacion distribución teorica",
xlab = "Distancia",
main="Cercanía de puntos según distancia")
grid()
View(spec)
# Modelo con solo x y y
fit1 <- ppm(spec, ~ x + y)
plot(fit1, how = "image", se = FALSE, pause = FALSE)
persp(predict(fit1), theta = 270)
# Modelo con un polinomio de grado 2 con x y y
fit2 <- ppm(spec, ~ polynom(x, y, 2))
plot(fit2, how = "image", se = FALSE, pause = FALSE)
persp(predict(fit2), theta = 180)
bei
b=bei
b=bei.extra
class(bei.extra)
?ppp
# Cargamos los datos
database <- read.csv("database.csv")
# Especificamos la region
# database <- database[database$Region == "MÃÂ©xico and Central America", ]
# Definimos la ventana
wndw <- owin(x = c(min(database$Longitude), max(database$Longitude)),
y = c(min(database$Latitude), max(database$Latitude)))
# Hacemos el objeto ppp
spec <- ppp(x = database$Longitude, database$Latitude, window = wndw,marks = database$Elevation..Meters.)
plot(spec,main = "Patrones espaciales")
# Cargamos los datos
database <- read.csv("database.csv")
# Especificamos la region
# database <- database[database$Region == "MÃÂ©xico and Central America", ]
# Definimos la ventana
wndw <- owin(x = c(min(database$Longitude), max(database$Longitude)),
y = c(min(database$Latitude), max(database$Latitude)))
# Hacemos el objeto ppp
spec <- ppp(x = database$Longitude, database$Latitude, window = wndw)
plot(spec,main = "Patrones espaciales")
# Modelo con solo x y y
fit1 <- ppm(spec, ~ x + y)
plot(fit1, how = "image", se = FALSE, pause = FALSE)
persp(predict(fit1), theta = 270)
vcov(fit1)
# Modelo con un polinomio de grado 2 con x y y
fit2 <- ppm(spec, ~ polynom(x, y, 2))
plot(fit2, how = "image", se = FALSE, pause = FALSE)
persp(predict(fit2), theta = 180)
vcov(fit2)
# Modelo con covariable
f <- function(x,y,a){ y - a }
fit3=ppm(X ~ x + f, covfunargs=list(a=database$Elevation..Meters.))
# Modelo con covariable
f <- function(x,y,a){ y - a }
fit3=ppm(spec ~ x + f, covfunargs=list(a=database$Elevation..Meters.))
# elev=
#
# fit3 <- ppm(spec, ~ ,)
# Modelo con covariable
f <- function(x,y,a){ y - a }
fit3=ppm(spec ~ x + f, covfunargs=list(a=database$Elevation..Meters.))
plot(fit3, how = "image", se = FALSE, pause = FALSE)
View(database)
knitr::opts_chunk$set(echo = FALSE,warning = FALSE,error = FALSE)
library(spatstat)
library(dplyr)
database <- read.csv("database.csv")
database2=database %>% filter(Country=="Japan"|Country=="Japan - administered by Russia")
View(database2)
# Cargamos los datos
database <- read.csv("database.csv")
database2=database %>% filter(Country=="Japan"|Country=="Japan - administered by Russia")
# Especificamos la region
# database <- database[database$Region == "MÃÂ©xico and Central America", ]
# Definimos la ventana
wndw <- owin(x = c(min(database2$Longitude),max(database2$Longitude)),
y = c(min(database2$Latitude), max(database2$Latitude)))
# Hacemos el objeto ppp
spec <- ppp(x = database2$Longitude, database2$Latitude, window = wndw)
plot(spec,main = "Patrones espaciales")
plot(density(spec),main="Gráfico de densidad")
rip.k <- Kest(spec)
plot(rip.k,main = "Función k")
grid()
rip.l <- Lest(spec)
plot(rip.l,main = "Función L")
grid()
# Simulacion de Poissones
set.seed(1) # Establecemos una semilla para reproducibilidad
env <- envelope(spec, fun = Lest, nsim = 999)
plot(env,main = "Monte Carlo envelopes con función L")
grid()
# Cantidad de puntos cercanos segun aumenta el radio
l.iso <- rip.l$iso
l.theo <- rip.l$theo
l.dev <- l.iso - l.theo
plot(l.dev ~ rip.l$r, type = "l",
ylab = "Desviacion distribución teorica",
xlab = "Distancia",
main="Cercanía de puntos según distancia")
grid()
# Modelo con solo x y y
fit1 <- ppm(spec, ~ x + y)
plot(fit1, how = "image", se = FALSE, pause = FALSE)
persp(predict(fit1), theta = 270)
vcov(fit1)
# Modelo con solo x y y
fit1 <- ppm(spec, ~ x + y)
plot(fit1, how = "image", se = FALSE, pause = FALSE)
persp(predict(fit1), theta = 270)
as.data.frame(vcov(fit1))
# Modelo con solo x y y
fit1 <- ppm(spec, ~ x + y)
plot(fit1, how = "image", se = FALSE, pause = FALSE)
persp(predict(fit1), theta = 270)
# Modelo con un polinomio de grado 2 con x y y
fit2 <- ppm(spec, ~ polynom(x, y, 2))
plot(fit2, how = "image", se = FALSE, pause = FALSE)
persp(predict(fit2), theta = 180)
# Modelo con solo x y y
fit1 <- ppm(spec, ~ x + y)
plot(fit1, how = "image", se = FALSE, pause = FALSE)
persp(predict(fit1), theta = 270)
as.data.frame(vcov(fit2))
# Modelo con un polinomio de grado 2 con x y y
fit2 <- ppm(spec, ~ polynom(x, y, 2))
fit2
plot(fit2, how = "image", se = FALSE, pause = FALSE)
persp(predict(fit2), theta = 180)
# Modelo con solo x y y
fit1 <- ppm(spec, ~ x + y)
fit1
plot(fit1, how = "image", se = FALSE, pause = FALSE)
persp(predict(fit1), theta = 270)
fitnull=update(fit2,~1)
anova(fitnull,fit2,test="Chi")
